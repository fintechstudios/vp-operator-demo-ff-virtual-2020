stages:
  - build
  - test
  - release # push all release artifacts
  - deploy-dev # deploy to the dev cluster

include:
  - local: 'ci/templates/helm/helm.gitlab-ci.yml'
  - local: 'ci/templates/bazel/bazel.gitlab-ci.yml'

bazel-build:
  extends: .bazel-job
  stage: build
  script:
    - bazel build //...

.bazel-test-job-base:
  extends: .bazel-test-job
  needs:
    - "bazel-build"

bazel-unit-test:
  extends: .bazel-test-job-base
  script:
    # find all testing targets with the name "unit-tests"
    - bazel query 'attr(name, "unit-tests", tests(//...))' | xargs bazel test

bazel-integration-test:
  extends: .bazel-test-job-base
  script:
    # find all testing targets with the name "int-tests"
    - bazel query 'attr(name, "int-tests", tests(//...))' | xargs ./scripts/bazel-test-dotenv.sh $ENV_FILE

bazel-lint:
  extends: .bazel-test-job-base
  script:
    # find all testing targets with the name "lint"
    - bazel query 'attr(name, "lint", tests(//...))' | xargs bazel test

## Helm Charts

chart-repo-build:
  extends: .helm-repo-build
  variables:
    CHART_DIR: charts/ff-virtual-2020
  needs: [] # can be started immediately

lint-charts:
  extends: .helm-repo-lint
  variables:
    CHART_DIRS: "charts/ff-virtual-2020"
  needs:
    - "chart-repo-build"

## Artifact Releasing

artifacts-store-top-speed:
  extends: .bazel-artifacts-store
  variables:
    S3_DIR: "fts-ff-virtual-2020-artifacts/top_speed"
    TARGET: "//top_speed/src/main/java/com/fintechstudios/ff_virtual_2020/top_speed:top_speed_pruned_deploy.jar"
    ARTIFACT: "top_speed/src/main/java/com/fintechstudios/ff_virtual_2020/top_speed/top_speed_pruned_deploy.jar"

## Chart Deploy

## Infrastructure

.infrastructure:
  variables:
    RELEASE_NAME: "ff-virtual-2020-top-speed-infra"
    CHART_DIR: "charts/ff-virtual-2020"
    CHART_NAME: "infrastructure"
    KUBE_NAMESPACE: "ff-virtual-2020"
  only:
    changes:
      # no application code, just Chart resources
      - charts/ff-virtual-2020/infrastructure/**/*
      - ci/templates/**/*

deploy-infrastructure-dev:
  extends:
    - .helm-deploy-dev
    - .infrastructure
  needs:
    # since no code, just wait for everything in the test stage,
    # but skip the artifact uploading release stage
    - "bazel-integration-test"
    - "bazel-unit-test"
    - "bazel-lint"
    - "lint-charts"

rollback-infrastructure-dev:
  extends:
    - .helm-rollback-dev
    - .infrastructure

## Not shooting for production in this demo!
#
#deploy-infrastructure-prod:
#  extends:
#    - .helm-rollback-prod
#    - .infrastructure
#  needs:
#    - "deploy-infrastructure-dev"
#
#rollback-infrastructure-prod:
#  extends:
#    - .helm-rollback-prod
#    - .infrastructure
#  needs:
#    # until can depend on job in same stage: https://gitlab.com/gitlab-org/gitlab/issues/30632
#    - "deploy-infrastructure-dev"

## Top Speed

.top-speed:
  variables:
    CHART_DIR: "charts/ff-virtual-2020"
    CHART_NAME: "top-speed"
    KUBE_NAMESPACE: "ff-virtual-2020"
    RELEASE_NAME: "ff-virtual-2020-top-speed"
  only:
    changes:
      - charts/ff-virtual-2020/top-speed/**/*
      - ci/templates/**/*
      - scripts/**/*
      - WORKSPACE
      - top_speed/**/*

.top-speed-deploy:
  extends: .top-speed
  before_script:
    # use the artifact from this commit
    # as the deployment artifact
    - export HELM_UPGRADE_EXTRA_ARGS="--set artifactJarUri=s3://fts-ff-virtual-2020-artifacts/top_speed/$CI_COMMIT_SHA.jar"

deploy-top-speed-dev:
  extends:
    - .helm-deploy-dev
    - .top-speed
  needs:
    - "artifacts-store-top-speed"

rollback-top-speed-dev:
  extends:
    - .helm-rollback-dev
    - .top-speed

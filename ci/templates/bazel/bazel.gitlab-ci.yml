# Bazel

# see: https://blog.donbowman.ca/2018/09/03/navigating-the-restrictions-of-ci-and-bazel/
#      https://blog.bazel.build/2016/01/27/continuous-integration.html
.bazel-job:
  image:
    name: l.gcr.io/google/bazel:3.5.0
    entrypoint: [""]
  # since gitlab only caches in the project workspace, must manually move the cache file around
  variables:
    TEST_TMPDIR: $CI_PROJECT_DIR/../.cache # where bazel puts the cache

  cache:
    # bazel should be smart enough to know when to invalidate the cache, but don't want other builds
    # having the ability to affect the master build - should look into hosting a build
    # farm if we continue to use bazel in other projects
    key: bazel-$CI_COMMIT_REF_NAME
    paths:
      - .cache

  before_script:
    - mkdir -p .cache
    - rm -rf ../.cache
    - mv .cache ..

  after_script:
    - mkdir -p .artifacts/testlogs .artifacts/bin
    # provide an "artifacts:" section in your test job if you want test artifacts available to later jobs
    # copy artifacts before the cache is moved and symlinks are broken
    - '[ -d ./bazel-testlogs ] && [ "$(ls -A ./bazel-testlogs)" ] && cp -R ./bazel-testlogs/* .artifacts/testlogs/'
    # provide an "artifacts:" section in your build job if you want the build artifacts available to later jobs
    - '[ -d ./bazel-bin ] && [ "$(ls -A ./bazel-bin)" ] && cp -R ./bazel-bin/* .artifacts/bin/'
    - mv ../.cache .

.bazel-test-job:
  extends: .bazel-job
  stage: test
  artifacts:
    reports:
      junit:
        - .artifacts/testlogs/**/*/test.xml
  needs:
    - "bazel-build"

## Artifacts

.bazel-artifacts-store:
  extends: .bazel-job
  variables:
    # S3_DIR: "" # required, where to store the built artifacts
    # TARGET: ""  # required, the bazel build target for the artifact
    # ARTIFACT: "" # required, where to find the build output in the bazel-bin
  stage: release
  only:
    refs:
      - master
  script:
    - curl https://bootstrap.pypa.io/get-pip.py > get-pip.py
    - python get-pip.py
    - pip install awscli
    - echo "Building artifact from target $TARGET"
    - bazel build "$TARGET"
    - ARTIFACT_LOCATION=$(bazel info bazel-genfiles)/"$ARTIFACT"
    - echo "Publishing artifact to s3://$S3_DIR/latest.jar"
    - aws s3 cp --follow-symlinks "$ARTIFACT_LOCATION" "s3://$S3_DIR/latest.jar"
    - echo "Publishing artifact to s3://$S3_DIR/$CI_COMMIT_SHA.jar"
    - aws s3 cp --follow-symlinks "$ARTIFACT_LOCATION" "s3://$S3_DIR/$CI_COMMIT_SHA.jar"
